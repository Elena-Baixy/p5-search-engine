#!/bin/bash
# search


# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

usage() {
  echo "Usage: $0 (start|stop|restart|status)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

case $1 in
  "start")
    if test -f "var/search.sqlite3"; then
      if ./bin/index status; then
        if pgrep -f "flask --app search run --host 0.0.0.0 --port 8000" &> /dev/null; then
            echo "Error: search server is already running"
            exit 1
        else
            echo "starting search server ..."
            mkdir -p var/log
            rm -f var/log/search.log
            flask --app search run --host 0.0.0.0 --port 8000 &> var/log/search.log &
        fi
      else
        echo "Error: can't find search database var/search.sqlite3"
        echo "Try ./bin/index start"
        exit 1
      fi
    else
      echo "Error: can't find search database var/search.sqlite3"
      echo "Try: ./bin/searchdb create"
      exit 1
    fi
  ;;

  "stop")
    echo "stopping search server ..."
    pkill -f 'flask --app search run --host 0.0.0.0 --port 8000' || true
  ;;

  "restart")
    echo "stopping search server ..."
    pkill -f 'flask --app search run --host 0.0.0.0 --port 8000' || true

    echo "starting search server ..."
    mkdir -p var/log
    rm -f var/log/search.log
    flask --app search run --host 0.0.0.0 --port 8000 &> var/log/search.log &
  ;;

  "status")
    set +o pipefail
    NPROCS=$(pgrep -f "flask --app search run --host 0.0.0.0 --port 8000" | wc -l)
    set -o pipefail
    if [ "$NPROCS" -eq 1 ]; then
      echo "search server running"
      exit
    else
      echo "search server stopped"
      exit 1
    fi
  ;;  
esac

